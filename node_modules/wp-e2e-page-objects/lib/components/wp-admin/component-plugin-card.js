'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _component = require('../component');

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * External dependencies
 */


var INSTALL_SELECTOR = _seleniumWebdriver.By.css('.install-now');
var ACTIVATE_SELECTOR = _seleniumWebdriver.By.css('.activate-now');

var ComponentPluginCard = function (_Component) {
	_inherits(ComponentPluginCard, _Component);

	function ComponentPluginCard(driver, pluginSlug) {
		_classCallCheck(this, ComponentPluginCard);

		var cardCSS = '.plugin-card-' + pluginSlug;

		var _this = _possibleConstructorReturn(this, (ComponentPluginCard.__proto__ || Object.getPrototypeOf(ComponentPluginCard)).call(this, driver, _seleniumWebdriver.By.css(cardCSS)));

		_this.cardCSS = cardCSS;
		_this.installSelector = _seleniumWebdriver.By.css(_this.cardCSS + ' ' + INSTALL_SELECTOR.value);
		_this.activateSelector = _seleniumWebdriver.By.css(_this.cardCSS + ' ' + ACTIVATE_SELECTOR.value);
		return _this;
	}

	_createClass(ComponentPluginCard, [{
		key: 'install',
		value: function install() {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this.installSelector);

			return _wpE2eWebdriver.WebDriverHelper.waitTillPresentAndDisplayed(this.driver, this.activateSelector, 120000);
		}
	}, {
		key: 'activate',
		value: function activate() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this.activateSelector);
		}
	}]);

	return ComponentPluginCard;
}(_component2.default);

exports.default = ComponentPluginCard;
module.exports = exports['default'];