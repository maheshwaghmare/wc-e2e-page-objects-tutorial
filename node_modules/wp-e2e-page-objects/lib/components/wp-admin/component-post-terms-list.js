'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _component = require('../component');

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var TERMS_LIST_SELECTOR = _seleniumWebdriver.By.css('#the-list');
var SEARCH_INPUT_SELECTOR = _seleniumWebdriver.By.css('#tag-search-input');
var SEARCH_SUBMIT_SELECTOR = _seleniumWebdriver.By.css('#search-submit');

var ComponentPostTermsList = function (_Component) {
	_inherits(ComponentPostTermsList, _Component);

	function ComponentPostTermsList(driver) {
		var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TERMS_LIST_SELECTOR;

		_classCallCheck(this, ComponentPostTermsList);

		return _possibleConstructorReturn(this, (ComponentPostTermsList.__proto__ || Object.getPrototypeOf(ComponentPostTermsList)).call(this, driver, _seleniumWebdriver.By.css(selector)));
	}

	_createClass(ComponentPostTermsList, [{
		key: 'search',
		value: function search(keyword) {
			_wpE2eWebdriver.WebDriverHelper.mouseMoveTo(this.driver, SEARCH_INPUT_SELECTOR);
			_wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, SEARCH_INPUT_SELECTOR, keyword);
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, SEARCH_SUBMIT_SELECTOR);
		}
	}, {
		key: 'editTermWithName',
		value: function editTermWithName(name) {
			this._mouseOverTermName(name);
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this._getTermNameSelector(name));
		}
	}, {
		key: 'viewTermWithName',
		value: function viewTermWithName(name) {
			this._mouseOverTermName(name);
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this._getRowActionSelector(name, 'view'));
		}
	}, {
		key: 'deleteTermWithName',
		value: function deleteTermWithName(name) {
			var _this2 = this;

			this._mouseOverTermName(name);
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this._getRowActionSelector(name, 'delete'));

			// TODO(gedex): Moves this to the helper. wc-e2e-page-objects has helper
			// waitTillAlertAccepted that should be available in wp-e2e-webdriver.
			return this.driver.wait(function () {
				return _this2.driver.switchTo().alert().then(function (alert) {
					return alert.accept().then(function () {
						return true;
					});
				}, function () {
					return false;
				});
			});
		}
	}, {
		key: '_getTermNameSelector',
		value: function _getTermNameSelector(name) {
			return _seleniumWebdriver.By.xpath(this._getTermNameXpathExpression(name));
		}
	}, {
		key: '_getRowActionSelector',
		value: function _getRowActionSelector(name, action) {
			return _seleniumWebdriver.By.xpath(this._getRowActionXpathExpression(name, action));
		}
	}, {
		key: '_getTermNameXpathExpression',
		value: function _getTermNameXpathExpression(name) {
			return '//a[@class=\'row-title\' and contains(text(), \'' + name + '\')]';
		}
	}, {
		key: '_getRowActionXpathExpression',
		value: function _getRowActionXpathExpression(name, action) {
			return '//td[(contains(@class, "column-name")) and .' + this._getTermNameXpathExpression(name) + ']' + ('//*[contains(@class, "' + action + '")]/a');
		}
	}, {
		key: '_mouseOverTermName',
		value: function _mouseOverTermName(name) {
			return _wpE2eWebdriver.WebDriverHelper.mouseMoveTo(this.driver, this._getTermNameSelector(name));
		}
	}]);

	return ComponentPostTermsList;
}(_component2.default);

exports.default = ComponentPostTermsList;
module.exports = exports['default'];