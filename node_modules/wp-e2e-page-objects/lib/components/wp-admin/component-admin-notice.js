'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _component = require('../component');

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var NOTICE_SELECTOR = _seleniumWebdriver.By.css('#message');

var ComponentAdminNotice = function (_Component) {
	_inherits(ComponentAdminNotice, _Component);

	function ComponentAdminNotice(driver) {
		var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NOTICE_SELECTOR;

		_classCallCheck(this, ComponentAdminNotice);

		return _possibleConstructorReturn(this, (ComponentAdminNotice.__proto__ || Object.getPrototypeOf(ComponentAdminNotice)).call(this, driver, selector, { wait: false }));
	}

	_createClass(ComponentAdminNotice, [{
		key: 'hasNotice',
		value: function hasNotice(notice) {
			var selector = _seleniumWebdriver.By.xpath(this._getNoticeXpathExpression(notice));
			return _wpE2eWebdriver.WebDriverHelper.isEventuallyPresentAndDisplayed(this.driver, selector);
		}
	}, {
		key: 'isDismissible',
		value: function isDismissible(notice) {
			var selector = _seleniumWebdriver.By.xpath(this._getDismissButtonXpathExpression(notice));
			return _wpE2eWebdriver.WebDriverHelper.isEventuallyPresentAndDisplayed(this.driver, selector);
		}
	}, {
		key: 'dismiss',
		value: function dismiss(notice) {
			var selector = _seleniumWebdriver.By.xpath(this._getDismissButtonXpathExpression(notice));
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, selector);
		}
	}, {
		key: '_getNoticeXpathExpression',
		value: function _getNoticeXpathExpression(notice) {
			return '//div[(contains(@class, "notice") or contains(@id, "message")) and .//*[contains(text(), "' + notice + '")]]';
		}
	}, {
		key: '_getDismissButtonXpathExpression',
		value: function _getDismissButtonXpathExpression(notice) {
			return this._getNoticeXpathExpression(notice) + '//button[@class="notice-dismiss"]';
		}
	}]);

	return ComponentAdminNotice;
}(_component2.default);

exports.default = ComponentAdminNotice;
module.exports = exports['default'];