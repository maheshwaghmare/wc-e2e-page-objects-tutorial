'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _page = require('../page');

var _page2 = _interopRequireDefault(_page);

var _wpAdminDashboard = require('./wp-admin-dashboard');

var _wpAdminDashboard2 = _interopRequireDefault(_wpAdminDashboard);

var _componentLoginForm = require('../../components/wp-admin/component-login-form');

var _componentLoginForm2 = _interopRequireDefault(_componentLoginForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Internal Dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var components = {
	loginForm: _componentLoginForm2.default
};

var defaultArgs = {
	url: '',
	visit: true,
	components: components
};

var WPLogin = function (_Page) {
	_inherits(WPLogin, _Page);

	function WPLogin(driver) {
		var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		_classCallCheck(this, WPLogin);

		args = Object.assign(defaultArgs, args);
		return _possibleConstructorReturn(this, (WPLogin.__proto__ || Object.getPrototypeOf(WPLogin)).call(this, driver, args));
	}

	_createClass(WPLogin, [{
		key: 'login',
		value: function login(username, password) {
			this.components.loginForm.setUsername(username);
			this.components.loginForm.setPassword(password);
			this.components.loginForm.login();

			return new _wpAdminDashboard2.default(this.driver, { visit: false });
		}
	}]);

	return WPLogin;
}(_page2.default);

exports.default = WPLogin;
module.exports = exports['default'];