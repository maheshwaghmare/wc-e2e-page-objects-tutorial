'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _componentPostTermFormEdit = require('../../components/wp-admin/component-post-term-form-edit');

var _componentPostTermFormEdit2 = _interopRequireDefault(_componentPostTermFormEdit);

var _wpAdmin = require('./wp-admin');

var _wpAdmin2 = _interopRequireDefault(_wpAdmin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Internal Dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var components = {
	form: _componentPostTermFormEdit2.default
};

var defaultArgs = {
	url: '',
	visit: true,
	components: components
};

var WPAdminPostTermEdit = function (_WPAdmin) {
	_inherits(WPAdminPostTermEdit, _WPAdmin);

	function WPAdminPostTermEdit(driver) {
		var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		_classCallCheck(this, WPAdminPostTermEdit);

		args = Object.assign(defaultArgs, args);
		return _possibleConstructorReturn(this, (WPAdminPostTermEdit.__proto__ || Object.getPrototypeOf(WPAdminPostTermEdit)).call(this, driver, args));
	}

	_createClass(WPAdminPostTermEdit, [{
		key: 'setName',
		value: function setName(name) {
			return this.components.form.setName(name);
		}
	}, {
		key: 'setSlug',
		value: function setSlug(slug) {
			return this.components.form.setSlug(slug);
		}
	}, {
		key: 'selectParent',
		value: function selectParent(option) {
			return this.components.form.selectParent(option);
		}
	}, {
		key: 'setDescription',
		value: function setDescription(description) {
			return this.components.form.setDescription(description);
		}
	}, {
		key: 'update',
		value: function update() {
			return this.components.form.submit();
		}
	}]);

	return WPAdminPostTermEdit;
}(_wpAdmin2.default);

exports.default = WPAdminPostTermEdit;
module.exports = exports['default'];