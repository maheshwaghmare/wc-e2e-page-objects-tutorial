'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpAdminSettings = require('./wp-admin-settings');

var _wpAdminSettings2 = _interopRequireDefault(_wpAdminSettings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal Dependencies
 */


var SITE_TITLE_SELECTOR = _seleniumWebdriver.By.css('#blogname');
var TAGLINE_SELECTOR = _seleniumWebdriver.By.css('#blogdescription');
var MEMBERSHIP_SELECTOR = _seleniumWebdriver.By.css('#users_can_register');

var defaultArgs = {
	url: '',
	visit: true
};

var WPAdminSettingsGeneral = function (_WPAdminSettings) {
	_inherits(WPAdminSettingsGeneral, _WPAdminSettings);

	function WPAdminSettingsGeneral(driver) {
		var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		_classCallCheck(this, WPAdminSettingsGeneral);

		args = Object.assign(defaultArgs, args);
		return _possibleConstructorReturn(this, (WPAdminSettingsGeneral.__proto__ || Object.getPrototypeOf(WPAdminSettingsGeneral)).call(this, driver, args));
	}

	_createClass(WPAdminSettingsGeneral, [{
		key: 'setSiteTitle',
		value: function setSiteTitle(title) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, SITE_TITLE_SELECTOR, title);
		}
	}, {
		key: 'setTagline',
		value: function setTagline(tagline) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, TAGLINE_SELECTOR, tagline);
		}
	}, {
		key: 'checkMembership',
		value: function checkMembership() {
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, MEMBERSHIP_SELECTOR);
		}
	}, {
		key: 'uncheckMembership',
		value: function uncheckMembership() {
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, MEMBERSHIP_SELECTOR);
		}
	}]);

	return WPAdminSettingsGeneral;
}(_wpAdminSettings2.default);

exports.default = WPAdminSettingsGeneral;
module.exports = exports['default'];