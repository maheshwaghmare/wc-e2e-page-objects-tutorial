'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

var _componentProductDataPanelGeneral = require('./component-product-data-panel-general');

var _componentProductDataPanelGeneral2 = _interopRequireDefault(_componentProductDataPanelGeneral);

var _componentProductDataPanelInventory = require('./component-product-data-panel-inventory');

var _componentProductDataPanelInventory2 = _interopRequireDefault(_componentProductDataPanelInventory);

var _componentProductDataPanelShipping = require('./component-product-data-panel-shipping');

var _componentProductDataPanelShipping2 = _interopRequireDefault(_componentProductDataPanelShipping);

var _componentProductDataPanelAttributes = require('./component-product-data-panel-attributes');

var _componentProductDataPanelAttributes2 = _interopRequireDefault(_componentProductDataPanelAttributes);

var _componentProductDataPanelVariations = require('./component-product-data-panel-variations');

var _componentProductDataPanelVariations2 = _interopRequireDefault(_componentProductDataPanelVariations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var METABOX_SELECTOR = _seleniumWebdriver.By.css('#woocommerce-product-data');
var PRODUCT_TYPE_SELECTOR = _seleniumWebdriver.By.css('#product-type');
var VIRTUAL_CHECKBOX_SELECTOR = _seleniumWebdriver.By.css('#_virtual');
var DOWNLOADABLE_CHECKBOX_SELECTOR = _seleniumWebdriver.By.css('#_downloadable');

var ComponentMetaBoxProductData = function (_ComponentMetaBox) {
	_inherits(ComponentMetaBoxProductData, _ComponentMetaBox);

	function ComponentMetaBoxProductData(driver) {
		_classCallCheck(this, ComponentMetaBoxProductData);

		var _this = _possibleConstructorReturn(this, (ComponentMetaBoxProductData.__proto__ || Object.getPrototypeOf(ComponentMetaBoxProductData)).call(this, driver, METABOX_SELECTOR));

		_this.panels = {};
		_this.setTabPanel('General', _componentProductDataPanelGeneral2.default);
		_this.setTabPanel('Inventory', _componentProductDataPanelInventory2.default);
		_this.setTabPanel('Shipping', _componentProductDataPanelShipping2.default);
		_this.setTabPanel('Advanced', _componentProductDataPanelShipping2.default);
		_this.setTabPanel('Attributes', _componentProductDataPanelAttributes2.default);
		_this.setTabPanel('Variations', _componentProductDataPanelVariations2.default);
		return _this;
	}

	_createClass(ComponentMetaBoxProductData, [{
		key: 'selectProductType',
		value: function selectProductType(type) {
			return _wpE2eWebdriver.WebDriverHelper.selectOption(this.driver, PRODUCT_TYPE_SELECTOR, type);
		}
	}, {
		key: 'checkVirtual',
		value: function checkVirtual() {
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, VIRTUAL_CHECKBOX_SELECTOR);
		}
	}, {
		key: 'uncheckVirtual',
		value: function uncheckVirtual() {
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, VIRTUAL_CHECKBOX_SELECTOR);
		}
	}, {
		key: 'checkDownloadable',
		value: function checkDownloadable() {
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, DOWNLOADABLE_CHECKBOX_SELECTOR);
		}
	}, {
		key: 'uncheckDownloadable',
		value: function uncheckDownloadable() {
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, DOWNLOADABLE_CHECKBOX_SELECTOR);
		}
	}, {
		key: 'hasTabActive',
		value: function hasTabActive(tab) {
			return _wpE2eWebdriver.WebDriverHelper.isEventuallyPresentAndDisplayed(this.driver, this._getTabSelector(tab, { active: true }));
		}
	}, {
		key: 'hasTab',
		value: function hasTab(tab) {
			return _wpE2eWebdriver.WebDriverHelper.isEventuallyPresentAndDisplayed(this.driver, this._getTabSelector(tab));
		}
	}, {
		key: 'clickTab',
		value: function clickTab(tab) {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, this._getTabSelector(tab));
			if ('undefined' === typeof this.panels[tab]) {
				throw new Error('Missing panel for this class');
			}

			var panel = new this.panels[tab](this.driver);
			panel.displayed();

			return panel;
		}
	}, {
		key: 'setTabPanel',
		value: function setTabPanel(tab, panelClass) {
			this.panels[tab] = panelClass;
		}
	}, {
		key: '_getTabSelector',
		value: function _getTabSelector(tab) {
			var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { active: false };

			var li = args.active ? 'li[contains(@class, "active")]' : 'li';
			return _seleniumWebdriver.By.xpath('//ul[contains(@class,"product_data_tabs")]//' + li + '/a[contains(., "' + tab + '")]');
		}
	}]);

	return ComponentMetaBoxProductData;
}(_wpE2ePageObjects.ComponentMetaBox);

exports.default = ComponentMetaBoxProductData;
module.exports = exports['default'];