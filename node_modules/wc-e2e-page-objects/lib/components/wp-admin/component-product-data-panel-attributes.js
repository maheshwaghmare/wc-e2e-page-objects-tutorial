'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

var _helper = require('../../helper');

var wcHelper = _interopRequireWildcard(_helper);

var _componentProductDataAttributeRow = require('./component-product-data-attribute-row');

var _componentProductDataAttributeRow2 = _interopRequireDefault(_componentProductDataAttributeRow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var PANEL_SELECTOR = _seleniumWebdriver.By.css('#product_attributes');
var ATTRIBUTE_TAXONOMY_SELECTOR = _seleniumWebdriver.By.css('select[name="attribute_taxonomy"]');
var ADD_SELECTOR = _seleniumWebdriver.By.css('button.add_attribute');
var SAVE_ATTRIBUTES_SELECTOR = _seleniumWebdriver.By.css('button.save_attributes');

var ComponentProductDataPanelAttributes = function (_Component) {
	_inherits(ComponentProductDataPanelAttributes, _Component);

	function ComponentProductDataPanelAttributes(driver) {
		_classCallCheck(this, ComponentProductDataPanelAttributes);

		return _possibleConstructorReturn(this, (ComponentProductDataPanelAttributes.__proto__ || Object.getPrototypeOf(ComponentProductDataPanelAttributes)).call(this, driver, PANEL_SELECTOR, { wait: false }));
	}

	_createClass(ComponentProductDataPanelAttributes, [{
		key: 'selectAttribute',
		value: function selectAttribute(option) {
			return _wpE2eWebdriver.WebDriverHelper.selectOption(this.driver, ATTRIBUTE_TAXONOMY_SELECTOR, option);
		}
	}, {
		key: 'add',
		value: function add() {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_SELECTOR);

			// This perform add attribute via AJAX that block the panel.
			wcHelper.waitTillUIBlockNotPresent(this.driver);

			return this.getRow('last');
		}
	}, {
		key: 'getRow',
		value: function getRow(row) {
			return new _componentProductDataAttributeRow2.default(this.driver, this._getAttributeRowSelector(row));
		}
	}, {
		key: 'saveAttributes',
		value: function saveAttributes() {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, SAVE_ATTRIBUTES_SELECTOR);

			// Once clicked two AJAX calls are performed sequentially: save attributes
			// then load variations. UI blocking is performed twice per AJAX call.
			wcHelper.waitTillUIBlockNotPresent(this.driver);
		}
	}, {
		key: '_getAttributeRowSelector',
		value: function _getAttributeRowSelector(row) {
			var selector = void 0;
			switch (row) {
				case 'first':
					selector = _seleniumWebdriver.By.css('.product_attributes .woocommerce_attribute:first-child');
					break;
				case 'last':
					selector = _seleniumWebdriver.By.css('.product_attributes .woocommerce_attribute:last-child');
					break;
				default:
					row = parseInt(row, 10);
					selector = _seleniumWebdriver.By.css('.product_attributes .woocommerce_attribute:nth-child(' + row + ')');
			}

			return selector;
		}
	}]);

	return ComponentProductDataPanelAttributes;
}(_wpE2ePageObjects.Component);

exports.default = ComponentProductDataPanelAttributes;
module.exports = exports['default'];