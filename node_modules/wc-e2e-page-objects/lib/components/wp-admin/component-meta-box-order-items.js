'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

var _helper = require('../../helper');

var wcHelper = _interopRequireWildcard(_helper);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var METABOX_SELECTOR = _seleniumWebdriver.By.css('#woocommerce-order-items');
var ADD_ITEMS_SELECTOR = _seleniumWebdriver.By.css('.add-line-item');
var ADD_PRODUCTS_SELECTOR = _seleniumWebdriver.By.css('.add-order-item');
var ADD_FEE_SELECTOR = _seleniumWebdriver.By.css('.add-order-fee');
var ADD_SHIPPING_COST_SELECTOR = _seleniumWebdriver.By.css('.add-order-shipping');
var SAVE_SELECTOR = _seleniumWebdriver.By.css('.save-action');
var CANCEL_SELECTOR = _seleniumWebdriver.By.css('.cancel-action');
var ADD_IN_DIALOG_SELECTOR = _seleniumWebdriver.By.css('#btn-ok');
var REFUND_BUTTON_SELECTOR = _seleniumWebdriver.By.css('.refund-items');
var REFUND_AMOUNT_SELECTOR = _seleniumWebdriver.By.css('#refund_amount');
var REFUND_REASON_SELECTOR = _seleniumWebdriver.By.css('#refund_reason');
var REFUND_MANUALLY_SELECTOR = _seleniumWebdriver.By.css('.do-manual-refund');
var REFUND_API_SELECTOR = _seleniumWebdriver.By.css('.do-api-refund');

var ComponentMetaBoxOrderItems = function (_ComponentMetaBox) {
	_inherits(ComponentMetaBoxOrderItems, _ComponentMetaBox);

	function ComponentMetaBoxOrderItems(driver) {
		_classCallCheck(this, ComponentMetaBoxOrderItems);

		return _possibleConstructorReturn(this, (ComponentMetaBoxOrderItems.__proto__ || Object.getPrototypeOf(ComponentMetaBoxOrderItems)).call(this, driver, METABOX_SELECTOR));
	}

	_createClass(ComponentMetaBoxOrderItems, [{
		key: 'clickAddItems',
		value: function clickAddItems() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_ITEMS_SELECTOR);
		}
	}, {
		key: 'addProduct',
		value: function addProduct(keyword, exactOption) {
			this.clickAddtems();
			this.clickAddProducts();
			wcHelper.selectOption2WithSearch(keyword, exactOption);
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_IN_DIALOG_SELECTOR);
			return wcHelper.waitTillUIBlockNotPresent(this.driver);
		}
	}, {
		key: 'clickAddProducts',
		value: function clickAddProducts() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_PRODUCTS_SELECTOR);
		}
	}, {
		key: 'clickAddFee',
		value: function clickAddFee() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_FEE_SELECTOR);
		}
	}, {
		key: 'clickAddShippingCost',
		value: function clickAddShippingCost() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_SHIPPING_COST_SELECTOR);
		}
	}, {
		key: 'clickSave',
		value: function clickSave() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, SAVE_SELECTOR);
		}
	}, {
		key: 'clickCancel',
		value: function clickCancel() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, CANCEL_SELECTOR);
		}
	}, {
		key: 'refundManually',
		value: function refundManually(amount) {
			var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

			this.clickRefund();
			this.setRefundAmount(amount);
			this.setRefundReason(reason);
			this.clickRefundManually();
		}
	}, {
		key: 'refundViaGateway',
		value: function refundViaGateway(amount) {
			var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

			this.clickRefund();
			this.setRefundAmount(amount);
			this.setRefundReason(reason);
			this.clickRefundViaGateway();
		}
	}, {
		key: 'clickRefund',
		value: function clickRefund() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, REFUND_BUTTON_SELECTOR);
		}
	}, {
		key: 'setRefundAmount',
		value: function setRefundAmount(amount) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, REFUND_AMOUNT_SELECTOR, amount);
		}
	}, {
		key: 'setRefundReason',
		value: function setRefundReason(reason) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, REFUND_REASON_SELECTOR, reason);
		}
	}, {
		key: 'clickRefundManually',
		value: function clickRefundManually() {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, REFUND_MANUALLY_SELECTOR);
			wcHelper.waitTillAlertAccepted(this.driver);
			return wcHelper.waitTillUIBlockNotPresent(this.driver);
		}
	}, {
		key: 'clickRefundViaGateway',
		value: function clickRefundViaGateway() {
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, REFUND_API_SELECTOR);
			wcHelper.waitTillAlertAccepted(this.driver);
			return wcHelper.waitTillUIBlockNotPresent(this.driver);
		}
	}]);

	return ComponentMetaBoxOrderItems;
}(_wpE2ePageObjects.ComponentMetaBox);

exports.default = ComponentMetaBoxOrderItems;
module.exports = exports['default'];