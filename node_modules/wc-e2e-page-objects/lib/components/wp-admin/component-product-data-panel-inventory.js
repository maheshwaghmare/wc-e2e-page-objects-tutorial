'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var PANEL_SELECTOR = _seleniumWebdriver.By.css('#inventory_product_data');
var SKU_SELECTOR = _seleniumWebdriver.By.css('#_sku');
var MANAGE_STOCK_SELECTOR = _seleniumWebdriver.By.css('#_manage_stock');
var STOCK_STATUS_SELECTOR = _seleniumWebdriver.By.css('#_stock_status');
var STOCK_QTY_SELECTOR = _seleniumWebdriver.By.css('#_stock');
var ALLOW_BACKORDERS_SELECTOR = _seleniumWebdriver.By.css('#_backorders');
var SOLD_INDIVIDUALLY_SELECTOR = _seleniumWebdriver.By.css('#_sold_individually');

var ComponentProductDataPanelInventory = function (_Component) {
	_inherits(ComponentProductDataPanelInventory, _Component);

	function ComponentProductDataPanelInventory(driver) {
		_classCallCheck(this, ComponentProductDataPanelInventory);

		return _possibleConstructorReturn(this, (ComponentProductDataPanelInventory.__proto__ || Object.getPrototypeOf(ComponentProductDataPanelInventory)).call(this, driver, PANEL_SELECTOR, { wait: false }));
	}

	_createClass(ComponentProductDataPanelInventory, [{
		key: 'setSKU',
		value: function setSKU(sku) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, SKU_SELECTOR, sku);
		}
	}, {
		key: 'checkManageStock',
		value: function checkManageStock() {
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, MANAGE_STOCK_SELECTOR);
		}
	}, {
		key: 'uncheckManageStock',
		value: function uncheckManageStock() {
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, MANAGE_STOCK_SELECTOR);
		}
	}, {
		key: 'selectStockStatus',
		value: function selectStockStatus(status) {
			return _wpE2eWebdriver.WebDriverHelper.selectOption(this.driver, STOCK_STATUS_SELECTOR, status);
		}
	}, {
		key: 'checkSoldIndividually',
		value: function checkSoldIndividually() {
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, SOLD_INDIVIDUALLY_SELECTOR);
		}
	}, {
		key: 'uncheckSoldIndividually',
		value: function uncheckSoldIndividually() {
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, SOLD_INDIVIDUALLY_SELECTOR);
		}
	}, {
		key: 'setStockQty',
		value: function setStockQty(qty) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, STOCK_QTY_SELECTOR, qty);
		}
	}, {
		key: 'selectAllowBackorders',
		value: function selectAllowBackorders(option) {
			return _wpE2eWebdriver.WebDriverHelper.selectOption(this.driver, ALLOW_BACKORDERS_SELECTOR, option);
		}
	}]);

	return ComponentProductDataPanelInventory;
}(_wpE2ePageObjects.Component);

exports.default = ComponentProductDataPanelInventory;
module.exports = exports['default'];