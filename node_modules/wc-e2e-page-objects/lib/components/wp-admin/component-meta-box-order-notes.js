'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

var _helper = require('../../helper');

var wcHelper = _interopRequireWildcard(_helper);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * External dependencies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


/**
 * Internal dependencies
 */


var METABOX_SELECTOR = _seleniumWebdriver.By.css('#woocommerce-order-notes');
var ADD_NOTE_BUTTON_SELECTOR = _seleniumWebdriver.By.css('a.add_note');
var NOTE_TEXTAREA_SELECTOR = _seleniumWebdriver.By.css('#add_order_note');
var NOTE_TYPE_SELECTOR = _seleniumWebdriver.By.css('#order_note_type');

var ComponentMetaBoxOrderNotes = function (_ComponentMetaBox) {
	_inherits(ComponentMetaBoxOrderNotes, _ComponentMetaBox);

	function ComponentMetaBoxOrderNotes(driver) {
		_classCallCheck(this, ComponentMetaBoxOrderNotes);

		return _possibleConstructorReturn(this, (ComponentMetaBoxOrderNotes.__proto__ || Object.getPrototypeOf(ComponentMetaBoxOrderNotes)).call(this, driver, METABOX_SELECTOR));
	}

	_createClass(ComponentMetaBoxOrderNotes, [{
		key: 'hasNote',
		value: function hasNote(note) {
			var selector = _seleniumWebdriver.By.xpath('//div[@id="woocommerce-order-notes"]' + ('//div[contains(@class, "note_content") and contains(.,"' + note + '")]'));
			return _wpE2eWebdriver.WebDriverHelper.isEventuallyPresentAndDisplayed(this.driver, selector);
		}
	}, {
		key: 'addNote',
		value: function addNote(note) {
			var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Private note';

			this.setNote(note);
			this.selectNoteType(type);
			return this.clickAdd();
		}
	}, {
		key: 'setNote',
		value: function setNote(note) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, NOTE_TEXTAREA_SELECTOR, note);
		}
	}, {
		key: 'selectNoteType',
		value: function selectNoteType(option) {
			return wcHelper.selectOption(this.driver, NOTE_TYPE_SELECTOR, option);
		}
	}, {
		key: 'clickAdd',
		value: function clickAdd() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, ADD_NOTE_BUTTON_SELECTOR);
		}
	}, {
		key: 'deleteNote',
		value: function deleteNote(note) {
			var selector = _seleniumWebdriver.By.xpath('//li[contains(@class, "note") .' + ('//div[contains(@class, "note_content") and contains(.,"' + note + '")]]') + '//a[contains(@class, "delete_note")]');
			_wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, selector);
			wcHelper.waitTillAlertAccepted(this.driver);
			return wcHelper.waitTillUIBlockNotPresent(this.driver);
		}
	}]);

	return ComponentMetaBoxOrderNotes;
}(_wpE2ePageObjects.ComponentMetaBox);

exports.default = ComponentMetaBoxOrderNotes;
module.exports = exports['default'];