'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _wpE2ePageObjects = require('wp-e2e-page-objects');

var _componentCheckoutBillingDetails = require('../components/component-checkout-billing-details');

var _componentCheckoutBillingDetails2 = _interopRequireDefault(_componentCheckoutBillingDetails);

var _componentCheckoutShippingDetails = require('../components/component-checkout-shipping-details');

var _componentCheckoutShippingDetails2 = _interopRequireDefault(_componentCheckoutShippingDetails);

var _componentCheckoutOrderReview = require('../components/component-checkout-order-review');

var _componentCheckoutOrderReview2 = _interopRequireDefault(_componentCheckoutOrderReview);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module CheckoutPage
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/**
 * External dependencies
 */


/**
 * Internal dependencies
 */


var defaultArgs = {
	components: {
		billingDetails: _componentCheckoutBillingDetails2.default,
		shippingDetails: _componentCheckoutShippingDetails2.default,
		orderReview: _componentCheckoutOrderReview2.default
	}
};

var ORDER_NOTES_SELECTOR = _seleniumWebdriver.By.css('#order_comments');
var SHIP_TO_DIFFERENT_ADDRESS_SELECTOR = _seleniumWebdriver.By.css('#ship-to-different-address-checkbox');
var PLACE_ORDER_SELECTOR = _seleniumWebdriver.By.css('#place_order');

/**
 * The front-end Checkout page.
 *
 * @extends Page
 */

var CheckoutPage = function (_Page) {
	_inherits(CheckoutPage, _Page);

	/**
 	* @param {WebDriver} driver   - Instance of WebDriver.
 	* @param {object}    args     - Configuration arguments.
 */
	function CheckoutPage(driver) {
		var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		_classCallCheck(this, CheckoutPage);

		args = Object.assign(defaultArgs, args);
		return _possibleConstructorReturn(this, (CheckoutPage.__proto__ || Object.getPrototypeOf(CheckoutPage)).call(this, driver, args));
	}

	/**
 * Set order notes for the order.
 *
 	* @param  {string}    notes - Text to put in the order notes box.
 	* @return {Promise}   Promise that evaluates to `true` if order notes are entered successfully, `false` otherwise.
 */


	_createClass(CheckoutPage, [{
		key: 'setOrderNotes',
		value: function setOrderNotes(notes) {
			return _wpE2eWebdriver.WebDriverHelper.setWhenSettable(this.driver, ORDER_NOTES_SELECTOR, notes);
		}

		/**
  * Check the "Ship to a different address?" box.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets checked, `false` otherwise.
  */

	}, {
		key: 'checkShipToDifferentAddress',
		value: function checkShipToDifferentAddress() {
			_wpE2eWebdriver.WebDriverHelper.mouseMoveTo(this.driver, SHIP_TO_DIFFERENT_ADDRESS_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, SHIP_TO_DIFFERENT_ADDRESS_SELECTOR);
		}

		/**
  * Uncheck the "Ship to a different address?" box.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets unchecked, `false` otherwise.
  */

	}, {
		key: 'uncheckShipToDifferentAddress',
		value: function uncheckShipToDifferentAddress() {
			_wpE2eWebdriver.WebDriverHelper.mouseMoveTo(this.driver, SHIP_TO_DIFFERENT_ADDRESS_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, SHIP_TO_DIFFERENT_ADDRESS_SELECTOR);
		}

		/**
  * Select a payment method.
  *
  	* @param  {string}    name - Text name of the payment method.
  	* @return {Promise}   Promise that evaluates to `true` if payment method is selected successfully, `false` otherwise.
  */

	}, {
		key: 'selectPaymentMethod',
		value: function selectPaymentMethod(name) {
			var selector = _seleniumWebdriver.By.xpath('//li[contains(@class, "wc_payment_method")]//label[contains(.,"' + name + '")]');
			return this.driver.actions().mouseMove(this.driver.findElement(selector), { x: 0, y: 0 }).click().perform().then(function () {
				return true;
			}, function () {
				return false;
			});
		}

		/**
  * Click the "Place order" button.
  *
  	* @return {Promise}   Promise that evaluates to `true` if button is clicked successfully, `false` otherwise.
  */

	}, {
		key: 'placeOrder',
		value: function placeOrder() {
			return _wpE2eWebdriver.WebDriverHelper.clickWhenClickable(this.driver, PLACE_ORDER_SELECTOR);
		}
	}]);

	return CheckoutPage;
}(_wpE2ePageObjects.Page);

exports.default = CheckoutPage;
module.exports = exports['default'];