'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _seleniumWebdriver = require('selenium-webdriver');

var _wpE2eWebdriver = require('wp-e2e-webdriver');

var _helper = require('../../helper');

var wcHelper = _interopRequireWildcard(_helper);

var _wpAdminWcSettings = require('./wp-admin-wc-settings');

var _wpAdminWcSettings2 = _interopRequireDefault(_wpAdminWcSettings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module WPAdminWCSettingsProductsDownloadable
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/**
 * External dependencies
 */


/**
 * Internal Dependencies
 */


var FILE_DOWNLOAD_METHOD_SELECTOR = _seleniumWebdriver.By.xpath('//span[@id="select2-woocommerce_file_download_method-container"]/following-sibling::span[contains(@class, "select2-selection__arrow")]');
var DOWNLOAD_REQUIRE_LOGIN_SELECTOR = _seleniumWebdriver.By.css('#woocommerce_downloads_require_login');
var GRANT_ACCESS_AFTER_PAYMENT_SELECTOR = _seleniumWebdriver.By.css('#woocommerce_downloads_grant_access_after_payment');

var defaultArgs = {
	url: '',
	visit: true
};

/**
 * The Products: Downloadable Products settings screen
 *
 * @extends WPAdminWCSettings
 */

var WPAdminWCSettingsProductsDownloadable = function (_WPAdminWCSettings) {
	_inherits(WPAdminWCSettingsProductsDownloadable, _WPAdminWCSettings);

	/**
 	* @param {WebDriver} driver   - Instance of WebDriver.
 	* @param {object}    args     - Configuration arguments.
 */
	function WPAdminWCSettingsProductsDownloadable(driver) {
		var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		_classCallCheck(this, WPAdminWCSettingsProductsDownloadable);

		args = Object.assign(defaultArgs, args);
		return _possibleConstructorReturn(this, (WPAdminWCSettingsProductsDownloadable.__proto__ || Object.getPrototypeOf(WPAdminWCSettingsProductsDownloadable)).call(this, driver, args));
	}

	/**
 * Select the file download method.
 *
 	* @param  {string}    option - File download text.
 	* @return {Promise}   Promise that evaluates to `true` if file download method selected successfully, `false` otherwise.
 */


	_createClass(WPAdminWCSettingsProductsDownloadable, [{
		key: 'selectFileDownloadMethod',
		value: function selectFileDownloadMethod(option) {
			return wcHelper.select2Option(this.driver, FILE_DOWNLOAD_METHOD_SELECTOR, option);
		}

		/**
  * Check the "Downloads require login" checkbox.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets checked successfully, `false` otherwise.
  */

	}, {
		key: 'checkDownloadsRequireLogin',
		value: function checkDownloadsRequireLogin() {
			_wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, DOWNLOAD_REQUIRE_LOGIN_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, DOWNLOAD_REQUIRE_LOGIN_SELECTOR);
		}

		/**
  * Uncheck the "Downloads require login" checkbox.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets unchecked successfully, `false` otherwise.
  */

	}, {
		key: 'uncheckDownloadsRequireLogin',
		value: function uncheckDownloadsRequireLogin() {
			_wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, DOWNLOAD_REQUIRE_LOGIN_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, DOWNLOAD_REQUIRE_LOGIN_SELECTOR);
		}

		/**
  * Check the "Grant access to downloadable products after payment" checkbox.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets checked successfully, `false` otherwise.
  */

	}, {
		key: 'checkGrantAccessAfterPayment',
		value: function checkGrantAccessAfterPayment() {
			_wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, GRANT_ACCESS_AFTER_PAYMENT_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, GRANT_ACCESS_AFTER_PAYMENT_SELECTOR);
		}

		/**
  * Uncheck the "Grant access to downloadable products after payment" checkbox.
  *
  	* @return {Promise}   Promise that evaluates to `true` if box is/gets unhecked successfully, `false` otherwise.
  */

	}, {
		key: 'uncheckGrantAccessAfterPayment',
		value: function uncheckGrantAccessAfterPayment() {
			_wpE2eWebdriver.WebDriverHelper.setCheckbox(this.driver, GRANT_ACCESS_AFTER_PAYMENT_SELECTOR);
			return _wpE2eWebdriver.WebDriverHelper.unsetCheckbox(this.driver, GRANT_ACCESS_AFTER_PAYMENT_SELECTOR);
		}
	}]);

	return WPAdminWCSettingsProductsDownloadable;
}(_wpAdminWcSettings2.default);

exports.default = WPAdminWCSettingsProductsDownloadable;
module.exports = exports['default'];